{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\Travel Buddy\\\\src\\\\components\\\\MapView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  userLocation,\n  destination,\n  onBack\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const directionsRendererRef = useRef(null);\n  const [directions, setDirections] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!userLocation || !destination) return;\n    const loadMap = () => {\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: userLocation,\n        zoom: 10,\n        streetViewControl: false,\n        mapTypeControl: false\n      });\n      const directionsService = new window.google.maps.DirectionsService();\n      const directionsRenderer = new window.google.maps.DirectionsRenderer({\n        map,\n        panel: document.getElementById('directionsPanel')\n      });\n      directionsRendererRef.current = directionsRenderer;\n      const request = {\n        origin: new window.google.maps.LatLng(userLocation.lat, userLocation.lng),\n        destination: new window.google.maps.LatLng(destination.lat, destination.lng),\n        travelMode: window.google.maps.TravelMode.DRIVING\n      };\n      directionsService.route(request, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          directionsRenderer.setDirections(result);\n          setDirections(result);\n          setError(null);\n        } else {\n          setError('Could not fetch directions. Please try again later.');\n        }\n      });\n    };\n    if (!window.google || !window.google.maps) {\n      setError('Google Maps API not loaded.');\n      return;\n    }\n    loadMap();\n  }, [userLocation, destination]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:flex-row h-full max-w-7xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-2/3 h-96 md:h-[600px] rounded-lg shadow-md overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        className: \"w-full h-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"directionsPanel\",\n      className: \"md:w-1/3 mt-4 md:mt-0 md:ml-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-auto max-h-[600px]\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), !error && !directions && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading directions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"fixed top-4 left-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded z-50\",\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"3wu29rBT4m65hooAfA0mGGQSLgw=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","MapView","userLocation","destination","onBack","_s","mapRef","directionsRendererRef","directions","setDirections","error","setError","loadMap","map","window","google","maps","Map","current","center","zoom","streetViewControl","mapTypeControl","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","panel","document","getElementById","request","origin","LatLng","lat","lng","travelMode","TravelMode","DRIVING","route","result","status","DirectionsStatus","OK","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["E:/My Projects/Travel Buddy/src/components/MapView.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst MapView = ({ userLocation, destination, onBack }) => {\r\n  const mapRef = useRef(null);\r\n  const directionsRendererRef = useRef(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!userLocation || !destination) return;\r\n\r\n    const loadMap = () => {\r\n      const map = new window.google.maps.Map(mapRef.current, {\r\n        center: userLocation,\r\n        zoom: 10,\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n      });\r\n\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      const directionsRenderer = new window.google.maps.DirectionsRenderer({\r\n        map,\r\n        panel: document.getElementById('directionsPanel'),\r\n      });\r\n      directionsRendererRef.current = directionsRenderer;\r\n\r\n      const request = {\r\n        origin: new window.google.maps.LatLng(userLocation.lat, userLocation.lng),\r\n        destination: new window.google.maps.LatLng(destination.lat, destination.lng),\r\n        travelMode: window.google.maps.TravelMode.DRIVING,\r\n      };\r\n\r\n      directionsService.route(request, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n          directionsRenderer.setDirections(result);\r\n          setDirections(result);\r\n          setError(null);\r\n        } else {\r\n          setError('Could not fetch directions. Please try again later.');\r\n        }\r\n      });\r\n    };\r\n\r\n    if (!window.google || !window.google.maps) {\r\n      setError('Google Maps API not loaded.');\r\n      return;\r\n    }\r\n\r\n    loadMap();\r\n  }, [userLocation, destination]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row h-full max-w-7xl mx-auto p-4\">\r\n      <div className=\"md:w-2/3 h-96 md:h-[600px] rounded-lg shadow-md overflow-hidden\">\r\n        <div ref={mapRef} className=\"w-full h-full\" />\r\n      </div>\r\n      <div\r\n        id=\"directionsPanel\"\r\n        className=\"md:w-1/3 mt-4 md:mt-0 md:ml-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-auto max-h-[600px]\"\r\n      >\r\n        {error && <p className=\"text-red-600\">{error}</p>}\r\n        {!error && !directions && <p>Loading directions...</p>}\r\n      </div>\r\n      <button\r\n        onClick={onBack}\r\n        className=\"fixed top-4 left-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded z-50\"\r\n      >\r\n        &larr; Back\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}